#!/usr/bin/env bash
# Script Name: rhisk
# Written by fullsalvo
# Combined with scripts written by Ethan Chan - https://github.com/metakirby5
# Loads whizkers templates including those from subfolders
# Lists usable options based on category type

#############
# Functions #
#############

err() {
	printf "\e[31m$1\e[0m" >&2
}

reload-desktop ()
{
    killall compton dunst
    i3-msg 'restart' &>/dev/null &
    compton &>/dev/null &
    dunst &>/dev/null &
    xrdb ~/.Xresources &>/dev/null &
    tmux source-file ~/.tmux.conf &>/dev/null &
    for pts in /dev/pts/*; do
	(echo -n "$(use-xresources < ~/.Xresources)" > $pts) 2>/dev/null &
    done &
}

wzk ()
{
    if [ "$#" -eq 0 ]; then
	whizkers -e >/dev/null
    else
	whizkers -e "$@" >/dev/null
    fi

    [ "$?" -ne 0 ] && exit 1

    reload-desktop
    [ "$#" -ne 0 ] && sleep 0.5

    exit 0
}

theme ()
{
    out=""

    tem=$(whizkers -l)
    for i in "$@"; do
	opt=$(printf "${tem}" | grep "${i}$")
	if [[ ! -z $opt ]]; then
	    out+="${opt} "
	else
	    err "Template \'${i}\' doesn't exist. Please choose a valid template.\n"
	    exit 1
	fi
    done

    wzk $out
    exit 0
}

options ()
{
    delim=""
    out=$(whizkers -l)
    if [[ -z $out ]]; then
	err "You have no templates to use.\n"
	exit 1
    fi
    printf "Options:\n"
    for line in $out; do
	if [[ $line =~ / ]]; then
	    delim+="${line%%\/*}\n"
	fi
    done
    delim=$(printf "${delim}" | uniq)
    for line in $delim; do
	printf "%2s${line##*\/}:\n"
	for lines in $out; do
	    if [[ $lines =~ ${line}/ ]]; then
		printf "%4s${lines##*\/}\n"
	    fi
	done
    done
    unorg=$(printf "$out" | grep -v "/")
    if [[ ! -z $unorg ]]; then
	printf "%2suncategorized:\n"
	for line in $unorg; do
	    printf "%4s${line}\n"
	done
    fi
}

usage ()
{
    clear
    more <<-'HELP'
rhisk - whizkers theme switch script
Usage:
  rhisk [ optional args... ] - Rhisk

Help Options:
  -?, -h                  Show help options
Theme Options:
  -o                      Show theme options
HELP
}

###########
# Options #
###########

while getopts ':ho?:' option; do
    case $option in
	o)
	    options
	    exit
	    ;;
        h)
	    usage
	    exit
	    ;;
    esac
done
shift $((OPTIND-1))

########
# Main #
########

theme "$@"
