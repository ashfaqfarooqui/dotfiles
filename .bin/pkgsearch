#!/usr/bin/env bash

declare esc=$(printf '\033')
declare c_reset="${esc}[0m"
declare c_red="${esc}[31m"
declare c_green="${esc}[32m"
declare c_blue="${esc}[34m"

die() {
  [[ -n "$1" ]] && err "$1"
  exit 1
}

has() {
  verbose=false
  if [[ $1 == '-v' ]]; then
    verbose=true
    shift
  fi
  if command -v $1 &> /dev/null; then
    return 0
  else
    [[ "$verbose" == true ]] && err "$1 not found"
    return 1
  fi
}

getCommandFallbacks() {
  for arg in "$@"; do
    if has $arg; then
      echo "$arg"
      return 0
    fi
  done
  return 1
}

declare installer
declare search

has -v fzf || die

fzf() {
  command fzf -e +s --multi --cycle --ansi --no-hscroll "$@"
}

if [[ -f /etc/debian_version ]]; then
  mapfile -t pkgs < <(
    apt-cache search '' |
    sed -u -r "s|^([^ ]+)|${c_green}\1${c_reset}|" |
    fzf --query="$*" |
    awk '{print $1}'
  )
  (( ${#pkgs} > 0 )) || exit
  sudo $(getCommandFallbacks 'apt' 'apt-get') install "${pkgs[@]}"
elif [[ -f /etc/arch-release ]]; then
  if (( $# > 0)); then
    search=$(getCommandFallbacks 'pacaur' 'yaourt' 'packer' 'apacman' 'pacman')
  else
    search='pacman'
  fi
  mapfile -t pkgs < <(
    $search -Ss "$@" |
    sed -u -r -n "/^[^ ]/{s/$/ -/; x; s|^([^/]+)/([^ ]+)|[${c_blue}\1${c_reset}] ${c_green}\2${c_reset}|; p;}; /^ /{s/^ */ /; x; G; s/\n//; x}" |
    fzf --header-lines=1 |
    awk '{print $2}'
  )
  (( ${#pkgs} > 0 )) || exit
  ${search/pacman/sudo pacman} -S "${pkgs[@]}"
fi
